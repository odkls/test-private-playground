name: Automate PR Reviews

on:
  pull_request:
    types: [opened, ready_for_review] # PR 생성 시 또는 Draft 상태에서 '리뷰 가능' 상태로 전환될 때 트리거되는 액션

jobs:
  # PR 작성자를 Assignee로 지정하고 Reviewer를 지정하는 작업
  assign:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # Assignee와 Reviewer 할당을 위한 권한
    steps:
      - uses: hkusu/review-assign-action@v1 # https://github.com/hkusu/review-assign-action
        with:
          # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
          assignees: ${{ github.actor }} # PR 작성자를 assignee로 지정
          # Repository Variables에 정의한 값
          # - Settings > Secrets and Variables > Actions > Variables > Repository variables
          reviewers: ${{ vars.REVIEWERS }} # 리뷰할 수 있는 사람의 목록

  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Action
        uses: actions/checkout@v4 # https://github.com/actions/checkout
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Github Actions에서 사용하는 기본 토큰
          fetch-depth: 1 # 가장 최근 커밋만 가져오기
          sparse-checkout: .github/actions # 액션 디렉토리만 가져오기

  # 액션 실행을 위한 Node.js 환경 설정
  setup-node:
    runs-on: ubuntu-latest
    needs: [checkout] # 액션 디렉토리를 가져오는 checkout 작업이 선행되어야 함
    steps:
      # node.js 환경 설정과 의존성 설치
      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      # 의존성 캐싱
      - name: Cache dependencies
        uses: actions/cache@v2

  # 연결된 이슈의 라벨을 PR에 추가하는 작업
  sync-labels:
    runs-on: ubuntu-latest
    needs: [checkout, setup-node]
    permissions:
      pull-requests: write # PR에 라벨을 추가하기 위한 권한
      issues: read # 이슈 라벨을 읽어오기 위한 권한
    steps:
      - name: Sync labels from linked issues
        uses: ./.github/actions/sync-labels
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # 연결된 이슈를 Review Pipeline로 이동하는 작업
  move-to-review:
    runs-on: ubuntu-latest
    needs: [checkout, setup-node]
    steps:
      - name: Move to Review Pipeline
        uses: ./.github/actions/zenhub-move-issue
        with:
          zenhub-token: ${{ secrets.ZENHUB_TOKEN }}
          repo-id: ${{ vars.ZENHUB_REPO_ID }}
          workspace-id: ${{ vars.ZENHUB_WORKSPACE_ID }}
          pipeline-id: ${{ vars.ZENHUB_REVIEW_PIPELINE_ID }}
